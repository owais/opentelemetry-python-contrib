name: Contrib Repo Tests

on:
  push:
    branches-ignore:
    - 'release/*'
  pull_request:
env:
  CORE_REPO_SHA: 32baf0672d3631e6c99e69502a5d5ffa81f610d3

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_matrix: ${{ steps.splittests.outputs.matrix }}
    steps:
      - name: Checkout Contrib Repo @ SHA - ${{ github.sha }}
        uses: actions/checkout@v2
      - name: Prepare test matrices
        id: splittests
        #run: ./.github/workflows/scripts/setup_tests.sh
        run: ./scripts/eachdist.py github_actions_matrix
  build:
    needs: [setup]
    env:
      # We use these variables to convert between tox and GHA version literals
      py36: 3.6
      py37: 3.7
      py38: 3.8
      py39: 3.9
      pypy3: pypy3
      RUN_MATRIX_COMBINATION: ${{ matrix.python-version }}-${{ matrix.package }}-${{ matrix.os }}
    # runs-on: ${{ matrix.os }}
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false  # ensures the entire test matrix is run, even if one permutation fails
      matrix: ${{ fromJson(needs.setup.outputs.build_matrix) }}
      #matrix:
      #  python-version: [ py36, py37, py38, py39, pypy3 ]
      #  package: ["instrumentation", "exporter", "sdkextension", "propagator"]
      #  os: [ ubuntu-latest ]
    steps:
      - name: Checkout Contrib Repo @ SHA - ${{ github.sha }}
        uses: actions/checkout@v2
      - name: Checkout Core Repo @ SHA - ${{ env.CORE_REPO_SHA }}
        uses: actions/checkout@v2
        with:
          repository: open-telemetry/opentelemetry-python
          ref: ${{ env.CORE_REPO_SHA }}
          path: opentelemetry-python-core

      - name: Get Python version from matrix
        id: python
        run: echo "::set-output name=version::$(cut -d'-' -f1 <<<'$${{ matrix.test }}')"

      - name: Get Package name from matrix
        id: package 
        run: echo "::set-output name=name::$(cut -d'-' -f3- <<<'$${{ matrix.test }}')"

      - name: Set up Python ${{ env[steps.python.outputs.version] }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env[steps.python.outputs.version] }}
      - name: Install tox
        run: pip install -U tox-factor
      - name: Cache tox environment
        # Preserves .tox directory between runs for faster installs
        uses: actions/cache@v2
        with:
          path: .tox
          key: tox-cache-${{ matrix.test }}-${{ hashFiles('tox.ini', 'dev-requirements.txt') }}
      - name: run tox
        run: tox -f ${{ steps.python.outputs.version}} -- --benchmark-json=${{ steps.python.outputs.version}}-benchmark.json
      - name: Find and merge benchmarks
        # TODO: Add at least one benchmark to every package type to remove this (#249)
        if: ${{ steps.package.outputs.name }} == 'sdkextension'
        run: >-
          jq -s '.[0].benchmarks = ([.[].benchmarks] | add)
          | if .[0].benchmarks == null then null else .[0] end'
          **/**/tests/*${{ matrix.package }}*-benchmark.json > output.json
      - name: Report on benchmark results
        # TODO: Add at least one benchmark to every package type to remove this (#249)
        if: ${{ steps.package.outputs.name }} == 'sdkextension'
        uses: rhysd/github-action-benchmark@v1
        with:
          name: OpenTelemetry Python Benchmarks - Python ${{ env[matrix.python-version ]}} - ${{ matrix.package }}
          tool: pytest
          output-file-path: output.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          max-items-in-chart: 100
          # Alert with a commit comment on possible performance regression
          alert-threshold: 200%
          fail-on-alert: true
          # Make a commit on `gh-pages` with benchmarks from previous step
          auto-push: ${{ github.ref == 'refs/heads/main' }}
          gh-pages-branch: gh-pages
          benchmark-data-dir-path: benchmarks
  misc:
    if: ${{ false }}
    strategy:
      fail-fast: false
      matrix:
        tox-environment: [ "docker-tests", "lint", "docs" ]
    name: ${{ matrix.tox-environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Contrib Repo @ SHA - ${{ github.sha }}
        uses: actions/checkout@v2
      - name: Checkout Core Repo @ SHA ${{ env.CORE_REPO_SHA }}
        uses: actions/checkout@v2
        with:
          repository: open-telemetry/opentelemetry-python
          ref: ${{ env.CORE_REPO_SHA }}
          path: opentelemetry-python-core
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install tox
        run: pip install -U tox
      - name: Cache tox environment
        # Preserves .tox directory between runs for faster installs
        uses: actions/cache@v2
        with:
          path: .tox
          key: v2-tox-cache-${{ matrix.tox-environment }}-${{ hashFiles('tox.ini', 'dev-requirements.txt', 'docs-requirements.txt') }}
      - name: run tox
        run: tox -e ${{ matrix.tox-environment }}
